<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.codeblue.mapper.UserMapper">
	<!-- Region 객체 -->
	<resultMap type="com.example.codeblue.vo.Region" id="Region">
		<result column="region_id" property="regionId"></result>
		<result column="region_name" property="regionName"></result>
	</resultMap>
	<!-- Rank 객체 -->
	<resultMap type="com.example.codeblue.vo.Rank" id="Rank">
		<result column="rank_id" property="rankId"></result>
		<result column="rank_name" property="rankName"></result>
	</resultMap>
	
	<!-- Tag 객체 -->
	<resultMap type="com.example.codeblue.vo.Tag" id="Tag">
		<result column="tag_id" property="tagId"></result>
		<result column="tag_name" property="tagName"></result>
	</resultMap>
	
	<!-- Feild 객체 -->
	<resultMap type="com.example.codeblue.vo.Feild" id="Feild">
		<result column="feild_id" property="feildId"></result>
		<result column="feild_name" property="feildName"></result>
	</resultMap>
	
	<!-- NoticeBoard 객체 -->
	<resultMap type="com.example.codeblue.vo.NoticeBoard" id="NoticeBoard">
		<result column="notice_id" property="noticeId"></result>
		<result column="notice_title" property="noticeTitle"></result>
		<result column="notice_content" property="noticeContent"></result>
		<result column="notice_datetime" property="noticeDatetime"></result>
	</resultMap>
	
	<!-- User 객체 -->
	<resultMap type="com.example.codeblue.vo.User" id="User">
		<result column="user_id" property="userId"></result>
		<result column="user_name" property="userName"></result>
		<result column="user_pw" property="userPw"></result>
		<result column="user_birthdate" property="userBirthdate"></result>
		<result column="user_createtime" property="userCreatetime"></result>
		<result column="user_authority" property="userAuthority"></result>
		
		<association property="region" resultMap="Region"></association>
		<association property="rank" resultMap="Rank"></association>
	</resultMap>
	

	<!-- QuestionComment 객체 -->
	<resultMap type="com.example.codeblue.vo.QuestionComment" id="QuestionComment">
		<result column="question_comment_id" property="questionCommentId"></result>
		<result column="question_comment_content" property="questionCommentContent"></result>
		<result column="question_comment_datetime" property="questionCommentDatetime"></result>
		
		<association property="user" resultMap="User"></association>
		<association property="questionBoard" resultMap="QuestionBoard"></association>
	</resultMap>
	
	<!-- QuestionBoard 객체 -->
	<resultMap type="com.example.codeblue.vo.QuestionBoard" id="QuestionBoard">
		<result column="question_id" property="questionId"></result>
		<result column="question_title" property="questionTitle"></result>
		<result column="question_content" property="questionContent"></result>
		<result column="question_datetime" property="questionDatetime"></result>
		<result column="answer_count" property="answerCount"></result>
		<result column="vote_count" property="voteCount"></result>
		<result column="comment_count" property="commentCount"></result>
		<result column="question_tags" property="questionTags"></result>		
		<association property="feild" resultMap="Feild"></association>
		<association property="user" resultMap="User"></association>
	</resultMap>
	
	<!-- Answer 객체 -->
	<resultMap type="com.example.codeblue.vo.Answer" id="Answer">
		<result column="answer_id" property="answerId"></result>
		<result column="answer_content" property="answerContent"></result>
		<result column="answer_datetime" property="answerDatetime"></result>
		
		<association property="user" resultMap="User"></association>
		<association property="questionBoard" resultMap="QuestionBoard"></association>
	</resultMap>
	<!-- AnswerComment 객체 -->
	<resultMap type="com.example.codeblue.vo.AnswerComment" id="AnswerComment">
		<result column="answer_comment_id" property="answerCommentId"></result>
		<result column="answer_comment_content" property="answerCommentContent"></result>
		<result column="answer_comment_datetime" property="answerCommentDatetime"></result>
		
		<association property="user" resultMap="User"></association>
		<association property="answer" resultMap="Answer"></association>
	</resultMap>
	<!-- service_category 객체 -->
	<resultMap type="com.example.codeblue.vo.ServiceCategory" id="ServiceCategory">
		<result column="service_category_id" property="serviceCategoryId"></result>
		<result column="service_category_name" property="serviceCategoryName"></result>
	</resultMap>
	<!-- FaqBoard 객체 -->
	<resultMap type="com.example.codeblue.vo.FaqBoard" id="FaqBoard">
		<result column="FAQ_id" property="faqId"></result>
		<result column="FAQ_title" property="faqTitle"></result>
		<result column="FAQ_content" property="faqContent"></result>
		<result column="FAQ_datetime" property="faqDatetime"></result>
		
		<association property="serviceCategory" resultMap="ServiceCategory">
		</association>
	</resultMap>
	
	
	<!-- 태그 등록 -->
	<insert id="insertTag" parameterType="map">
		INSERT INTO tag(question_id, tag_name) VALUES( #{questionId}, #{tagName})
	</insert>
	
	<select id="selectLastInsertQuestionId" resultType="int">
		SELECT max(question_id) FROM question_board;
	</select>
	
	<!--  질문 답변 댓글 총 개수 가져오기 -->
	<select id="selectAnswerCommentCount" resultType="int" parameterType="int">
		SELECT COUNT(*)
		FROM answer_comment
		WHERE answer_id = #{answerId}
	</select>
	<!--  질문 댓글 추가하기 (원본) -->
	<insert id="insertQuestionComment" parameterType="com.example.codeblue.vo.QuestionComment">
		INSERT INTO question_comment(
			question_id,
			user_id,
			question_comment_content,
			question_comment_datetime
		) VALUES(
			#{questionBoard.questionId},
			#{user.userId},
			#{questionCommentContent},
			NOW()
		)
	
	</insert>
	<!--  질문댓글 수 가져오기 -->
	<select id="selectQuestionCommentTotal" parameterType="int" resultType="int">
	SELECT COUNT(*)
	FROM question_comment
	WHERE question_id = #{questionId}
	
	</select>
	<!--  질문 답변 댓글 추가하기 (원본) -->
	<insert id="insertAnswerComment" parameterType="com.example.codeblue.vo.AnswerComment">
		INSERT INTO answer_comment(
			answer_id,
			user_id,
			answer_comment_content,
			answer_comment_datetime
		) VALUES (
			#{answer.answerId},
			#{user.userId},
			#{answerCommentContent},
			NOW()
		)
	</insert>
	<!-- 질문 답변 댓글 리스트 가져오기 -->
	<select id="selectAnswerCommentList" parameterType="int" resultMap="AnswerComment">
		SELECT	ac.answer_comment_id,
				ac.answer_id,
				u.user_id,
				u.user_name,
				ac.answer_comment_content,
				ac.answer_comment_datetime
		FROM answer_comment ac INNER JOIN user u
		ON ac.user_id = u.user_id
		WHERE ac.answer_id = #{answerId}
		ORDER BY ac.answer_comment_datetime DESC
	</select>
	<!--질문 답변 추가하기  -->
	<insert id="insertAnswer" parameterType="com.example.codeblue.vo.Answer">
		INSERT INTO answer  (
			question_id,
			answer_content,
			answer_datetime,
			user_id
		)
		VALUES (
			#{questionBoard.questionId},
			#{answerContent},
			NOW(),
			#{user.userId}
		)			
	</insert>
	<!--질문 답변 리스트 가져오기 -->
	<select id="selectAnswerList" parameterType="int" 
	resultMap="Answer">
		SELECT a.answer_id,
			a.answer_content,
			a.answer_datetime,
			u.user_id,
			u.user_name,
			a.question_id
		FROM answer a INNER JOIN user u
		ON a.user_id = u.user_id
		WHERE a.question_id =  #{questionId}
		ORDER BY a.answer_datetime DESC
	</select>
	
	<select id="selectUserOne" parameterType="com.example.codeblue.vo.User"
			resultMap="User">
		SELECT 
			   user_id,
			   user_name,
			   region_id,
			   user_birthdate,
			   user_createtime
		FROM user
		WHERE user_id = ${userId}
	</select>

	<select id="selectTagList" parameterType="com.example.codeblue.vo.Page" resultMap="Tag">
		SELECT 
			tag_name
	    FROM tag
	    ORDER BY notice_datetime DESC
	    LIMIT #{beginRow},#{rowPerPage}
	</select>

	<select id="selectQuestionCommentList" parameterType="int" resultMap="QuestionComment">
		SELECT	
			qc.question_comment_id,
			u.user_id,
			u.user_name,
			qc.question_comment_content,
			qc.question_id,
			qc.question_comment_datetime
		FROM question_comment qc INNER JOIN user u
		ON u.user_id = qc.user_id
		WHERE qc.question_id = #{qestionId}
		ORDER BY qc.question_comment_datetime DESC
	</select>
	
	<select id="selectQuestionCommentCount" resultType="int" parameterType="int">
		SELECT 
			COUNT(question_id) 
		FROM question_comment
			WHERE question_id = #{questionId}
	</select>
	
	<select id="selectQuestionBoardOne" parameterType="int" resultMap="QuestionBoard">
		SELECT 
			qb.question_id,
			qb.question_title,
			qb.question_content,
			qb.question_datetime,
			qb.feild_id,
			u.user_id,
			u.user_name
		FROM question_board qb INNER JOIN user u 
		ON u.user_id = qb.user_id
		WHERE qb.question_id = #{questionId}
	</select>
	
	<select id="selectQuestionBoardList" resultMap="QuestionBoard" parameterType="com.example.codeblue.vo.Page">
		SELECT 
				q.question_id,
				q.question_title,
				q.question_datetime,
				q.question_content,
				q.user_id,
				u.user_name,
				CASE WHEN a.answer_count IS NULL then 0 ELSE a.answer_count END AS answer_count,
				CASE WHEN qc.comment_count IS NULL then 0 ELSE qc.comment_count END AS comment_count,
				CASE WHEN qv.vote_count IS NULL then 0 ELSE qv.vote_count END AS vote_count,
				CASE WHEN ad.answer_datetime IS NULL then DATE(0) ELSE ad.answer_datetime END AS answer_datetime
		FROM question_board q left JOIN (SELECT COUNT(*) AS answer_count,question_id FROM
		answer
		GROUP BY question_id) a
		ON q.question_id = a.question_id
		LEFT JOIN (SELECT COUNT(*) AS comment_count,question_id FROM
		question_comment
		GROUP BY question_id) qc
		ON q.question_id = qc.question_id
		LEFT JOIN (SELECT COUNT(*) AS vote_count,question_id FROM
		question_vote
		GROUP BY question_id) qv
		ON q.question_id = qv.question_id
		LEFT JOIN (SELECT MAX(answer_datetime) as answer_datetime,question_id FROM answer
		GROUP BY question_id
		HAVING MAX(answer_datetime)) ad
		ON q.question_id = ad.question_id
		INNER JOIN user u
		ON u.user_id = q.user_id
		<where>
			<if test="searchWord != null">
				q.question_title like CONCAT('%',#{searchWord},'%')
			</if>
			<if test="feildId != 99">
				q.feild_id = #{feildId}
			</if>
		</where>
		<trim prefix="ORDER BY">
			<if test="searchCategory == 'today'"> q.question_datetime DESC </if>
			<if test="searchCategory == 'hot'"> answer_count DESC </if> 
			<if test="searchCategory == 'help'"> answer_count ASC,q.question_datetime DESC </if>
			<if test="searchCategory == 'ongoing'"> answer_datetime DESC </if>                          
		</trim> 
			LIMIT #{beginRow},#{rowPerPage}
	</select>
	
	<select id="selectQuestionBoardTotalCount" resultType="int" parameterType="com.example.codeblue.vo.Page">
		SELECT 
			COUNT(*)
		FROM question_board
		<where>
			<if test="searchWord != null">
				question_title like CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>

	<select id="selectNoticeBoardList"
			parameterType="com.example.codeblue.vo.Page"
			resultMap="NoticeBoard">
	SELECT notice_id,
			notice_title,
			notice_content,
			notice_datetime
    FROM notice_board
    ORDER BY notice_datetime DESC
    LIMIT #{beginRow},#{rowPerPage}
   </select>
   
   <select id="noticeBoardTotalRow"
		   resultType="int">
   		SELECT COUNT(*) 
   			FROM notice_board
   </select>
   <select  id="selectNoticeBoardOne" 
   			parameterType="int"
   			resultMap="NoticeBoard">
   	SELECT notice_id,
			notice_title,
			notice_content,
			notice_datetime
    FROM notice_board
    WHERE notice_id = #{noticeId}
   	</select>

	<insert id="insertQuestion" parameterType="com.example.codeblue.vo.QuestionBoard">
		INSERT INTO question_board  (
			user_id,
			question_title,
			question_content,
			question_datetime,
			feild_id,
			question_tags
		)
		VALUES (
			#{user.userId},
			#{questionTitle},
			#{questionContent},
			NOW(),
			#{feild.feildId},
			#{questionTags}
		)		
	</insert>

	<insert id="insertExpert" parameterType="com.example.codeblue.vo.Expert">
		INSERT INTO expert(
			user_id,
			feild_id,
			expert_license_no,
			expert_license_issue_date
		)VALUE(
			#{userId}, #{feildId}, #{expertLicenseNo},#{expertLicenseIssueDate}
		)
	</insert>

	<insert id="insertUser" parameterType="com.example.codeblue.vo.User">
		INSERT INTO user(
			user_id,
			user_name,
			user_pw,
			user_birthdate,
			user_createtime,
			region_id
		) values (
			#{userId}, #{userName}, #{userPw},#{userBirthdate}, now(),#{region.regionId}
		)
	</insert>
	
	<select id="selectUserId" parameterType="com.example.codeblue.vo.User" resultMap="User">
		SELECT user_id, user_name
		FROM user WHERE user_id = #{userId} AND user_pw = #{userPw}
	</select>
	
	<select id="selectUserIdForCheck" parameterType="com.example.codeblue.vo.User" resultMap="User">
		SELECT user_id, user_name
		FROM user WHERE user_id = #{userId}
	</select>
	

	
	<update id="updateUserPw" parameterType="com.example.codeblue.vo.User">
		UPDATE user SET user_pw = #{userPw} WHERE user_id = #{userId}
	</update>
	<!-- 유저조회 -->
	<select id="selectUserList" resultMap="User">
		select
			u.user_id,
			u.user_name,
			re.region_id,
			re.region_name,
			u.user_birthdate,
			u.user_createtime,
			ra.rank_id,
			ra.rank_name,
			u.user_activity
		from user u inner join region re INNER JOIN rank ra
		ON u.region_id = re.region_id AND u.rank_id = ra.rank_id
		where u.user_activity = 'Y'
		<if test="searchWord != null">
			AND user_name like CONCAT('%',#{searchWord},'%')
		</if>
		ORDER BY user_createtime DESC
		LIMIT #{beginRow},#{rowPerPage}
	</select>
	<!-- 유저 수 카운팅 -->
	<select id="selectUserCount" parameterType="com.example.codeblue.vo.Page" resultType="int">
	select
		count(*) 
	from user
	where user_activity = 'Y'
	<if test="searchWord != null">
			AND user_name LIKE CONCAT('%',#{searchWord},'%')
	</if>
	</select>
	<!-- serviceCategory 리스트 -->
	<select id="selectServiceCategoryList" resultMap="ServiceCategory">
		select service_category_id, service_category_name
		from service_category
	</select>
	<!-- faq 리스트 -->
	<select id="selectFaqList" parameterType="com.example.codeblue.vo.Page" resultMap="FaqBoard">
		SELECT f.FAQ_id, sc.service_category_name, f.FAQ_title, f.FAQ_datetime
		FROM faq_board f INNER JOIN service_category sc
		ON f.service_category_id = sc.service_category_id
		<if test="searchCategory != null">
			WHERE f.service_category_id = #{searchCategory}
		</if> 
		ORDER BY f.FAQ_datetime DESC
		LIMIT #{beginRow},#{rowPerPage}
	</select>
	<!-- faq 총 수 -->
	<select id="selectFaqCount" parameterType="com.example.codeblue.vo.Page" resultType="int">
		SELECT COUNT(*)
		FROM faq_board
		<if test="searchCategory != null">
			WHERE service_category_id = #{searchCategory}
		</if>
	</select>
	<!--  faqone 출력 (이전글,다음글까지 출력) -->
	<select id="selectFaqOne" parameterType="int" resultMap="FaqBoard">
		SELECT f.FAQ_id, f.FAQ_title, se.service_category_name, f.FAQ_content, f.FAQ_datetime
		FROM faq_board f INNER JOIN service_category se
		ON f.service_category_id = se.service_category_id
		WHERE f.FAQ_id IN (
		    (SELECT faq_id FROM faq_board WHERE faq_id &lt; #{faqId} ORDER BY faq_id DESC LIMIT 1),
			 (SELECT faq_id FROM faq_board WHERE faq_id = #{faqId}),
		    (SELECT faq_id FROM faq_board WHERE faq_id &gt; #{faqId} ORDER BY faq_id LIMIT 1)
			 );
	</select>
</mapper>














